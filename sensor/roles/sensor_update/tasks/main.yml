---
- name: Gather the sensor public IP
  ipify_facts:

- name: Include the sensor configuration vars
  include_vars:
    file: ../honeydeck-sensor.yml
    name: honeydeck_sensor

- name: Check for existing sensor token and honeydeck server and end play if not configured
  debug:
    msg: "The honeydeck sensor token or honeydeck server is not configured, ending play"
  when: 
    - (honeydeck_sensor.honeydeck_server is not defined) or
      (honeydeck_sensor.sensor_group_token is not defined)

- name: Check for existing sensor token and honeydeck server and end play if not configured
  meta: end_play
  when: 
    - (honeydeck_sensor.honeydeck_server is not defined) or
      (honeydeck_sensor.sensor_group_token is not defined)

- name: Check that honeypot token is valid
  uri:
    url: "{{ honeydeck_sensor.honeydeck_server }}/api/v1/sensors/discovery/"
    method: GET 
    return_content: yes
    headers:
      Content-Type: "application/json"
      Honeydeck-Token: "{{ honeydeck_sensor.honeydeck_token }}"
  register: hd_sensor_validated

- name: Set sensor name from server
  set_fact:
    sensor_name: "{{ hd_sensor_validated.json.name }}"
  when: hd_sensor_validated.status == 200

- name: Install sensor roles based on honeydeck-sensor.yml configuration
  include_role:
    name: "{{ item }}"
  loop: "{{honeydeck_sensor.sensor_roles }}"
